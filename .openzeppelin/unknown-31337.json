{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    "txHash": "0x9e7b3440ca593312f4a90701cb49fe186f095918cfcd87361c75354643e80c2b",
    "deployTransaction": {
      "hash": "0x9e7b3440ca593312f4a90701cb49fe186f095918cfcd87361c75354643e80c2b",
      "type": 0,
      "accessList": null,
      "blockHash": "0xc164dbe4df863d310610f4500998e2b5712a73f093894ebe03098a7d43e5b1d7",
      "blockNumber": 3,
      "transactionIndex": 0,
      "confirmations": 1,
      "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x016233bbfd"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 2,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x95d77fc984c99d0f5251f6f037f9989e15427420b64cd3ce701d43c89bf4d8fb",
      "s": "0x0e0fc85cd6e3c07fa3db5556330cc158a8b3aa6257a2628d67bb32bccf4e4e1e",
      "v": 62709,
      "creates": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "chainId": 31337
    }
  },
  "proxies": [
    {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0x336beee85478eb186194085da0321b4c471ebc7e754ba57ddc44c7b9681aae5a",
      "kind": "transparent"
    },
    {
      "address": "0x4ed7c70F96B99c776995fB64377f0d4aB3B0e1C1",
      "txHash": "0x2076ab77dcab9943e1f84462bb209313cf80e8de37bfe2b923f58c66d8004f7a",
      "kind": "transparent"
    },
    {
      "address": "0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f",
      "txHash": "0xb39013bd10c16a6b365be9d4fb3fb4af782fa26f41ccf655a1788b5ca445f4ba",
      "kind": "transparent"
    },
    {
      "address": "0x7a2088a1bFc9d81c55368AE168C2C02570cB814F",
      "txHash": "0x10cd99f0e06826855fd5ee3ef28a3041157bd8ad4693ce68fdd91fbe8bf6664e",
      "kind": "transparent"
    },
    {
      "address": "0xc5a5C42992dECbae36851359345FE25997F5C42d",
      "txHash": "0x549bb86adca9b3ad901bb6c941f0bf01395726b6c6600148f41cef5dfaeb507b",
      "kind": "transparent"
    },
    {
      "address": "0xE6E340D132b5f46d1e472DebcD681B2aBc16e57E",
      "txHash": "0x1f39de6ad8bde36d5e11bccbf3e5190ad96c0d1baab36870d1c64e6e3dafa31b",
      "kind": "transparent"
    },
    {
      "address": "0x84eA74d481Ee0A5332c457a4d796187F6Ba67fEB",
      "txHash": "0x9c3ea12179062613c2e6dcda7406da2bc24e1cc6008a2b038f4e7dcbf20c49dd",
      "kind": "transparent"
    },
    {
      "address": "0xa82fF9aFd8f496c3d6ac40E2a0F282E47488CFc9",
      "txHash": "0xcb93189dde7ef8fa1ad0ce0625c5db893f01a1ac1b12588004cb532d4c3246ad",
      "kind": "transparent"
    },
    {
      "address": "0x851356ae760d987E095750cCeb3bC6014560891C",
      "txHash": "0xd40bea8b7d8acf259fc1114a2573275a2d13ce3bf921ceb6d57d50122188f0ac",
      "kind": "transparent"
    },
    {
      "address": "0x95401dc811bb5740090279Ba06cfA8fcF6113778",
      "txHash": "0xda310d0df7cd06d44ea2daa8060d1ef84eddeb25a5a0f2c229dc0babe269da94",
      "kind": "transparent"
    },
    {
      "address": "0x70e0bA845a1A0F2DA3359C97E0285013525FFC49",
      "txHash": "0x9101a88292fb55a179e8c33e5a9373fbda39d7a69f35837aa70cbc6d576fa49d",
      "kind": "transparent"
    },
    {
      "address": "0x0E801D84Fa97b50751Dbf25036d067dCf18858bF",
      "txHash": "0x0d81a4c7dba8df5cf3321d2f89b55ea48607afb340e31c887076ebb6d2702f0a",
      "kind": "transparent"
    },
    {
      "address": "0x809d550fca64d94Bd9F66E60752A544199cfAC3D",
      "txHash": "0xc53dc3a23617f0d4d199bb07575d5c24b2f0826178f24690958fb9833dd107da",
      "kind": "transparent"
    },
    {
      "address": "0xCD8a1C3ba11CF5ECfa6267617243239504a98d90",
      "txHash": "0x64f258ad6ca2a4ba86f32198c66aa737bf89fe08f248d39ac3ae4d261c09db20",
      "kind": "transparent"
    },
    {
      "address": "0xcbEAF3BDe82155F56486Fb5a1072cb8baAf547cc",
      "txHash": "0x9cce9ae666cfb41bc46ba546f64b9136d85cba7db32fbff025fc71748ba593c0",
      "kind": "transparent"
    },
    {
      "address": "0x5081a39b8A5f0E35a8D959395a630b68B74Dd30f",
      "txHash": "0x658a00cd6a2a1712dabb0093138ce9ae15cc1b48f301b400a616f2f0862fde46",
      "kind": "transparent"
    },
    {
      "address": "0x21dF544947ba3E8b3c32561399E88B52Dc8b2823",
      "txHash": "0xb853280e0477993900988dc93bbd1445a82144b0734f4aaeeca55a18a8a6ce65",
      "kind": "transparent"
    },
    {
      "address": "0x36b58F5C1969B7b6591D752ea6F5486D069010AB",
      "txHash": "0x3802a522d10e11c420e17baf1862718ea2aff288b2e77e0cf8485a07a62ab68c",
      "kind": "transparent"
    },
    {
      "address": "0x172076E0166D1F9Cc711C77Adf8488051744980C",
      "txHash": "0xf42b974aceda27fb5a07b74485a0d9db2ca5e978ad59283b68335c8d1fd0c975",
      "kind": "transparent"
    },
    {
      "address": "0xfbC22278A96299D91d41C453234d97b4F5Eb9B2d",
      "txHash": "0x41a1a0106e8b764b84b39dadc7b1bb98e1137721e37b381b8cb86d74d3cb1c95",
      "kind": "transparent"
    },
    {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0x62f61db4fbd8c087fa3a9d63153d2cc3fbe92d256e9f05ebdee66df660d2574f",
      "kind": "transparent"
    },
    {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0xf9e246a152531e0cd1b0fdbec2bd979add8e76147c5ad16039206dd31dc662d9",
      "kind": "transparent"
    },
    {
      "address": "0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0",
      "txHash": "0xf1588865f18a3682b8121d61f403e3653e21aa0d4f9217959deda69f1e466fdc",
      "kind": "transparent"
    },
    {
      "address": "0x0B306BF915C4d645ff596e518fAf3F9669b97016",
      "txHash": "0xe17524605c056d54630617a97a816358549410ecd5231c75bc18b56a8d15d7ab",
      "kind": "transparent"
    },
    {
      "address": "0x68B1D87F95878fE05B998F19b66F4baba5De1aed",
      "txHash": "0xf436b598b17c235556a26e418687d9209897ae70e99771effaaed6c43cc4a50a",
      "kind": "transparent"
    },
    {
      "address": "0x59b670e9fA9D0A427751Af201D676719a970857b",
      "txHash": "0xe6204355498e6a397c1fd06cbc2422a178ff881d7451ed10b50dc55255730116",
      "kind": "transparent"
    },
    {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0x0bb84a4ffe9c3679a48e2d92db18231a270a9a66638431ca9745e5074fc82b5e",
      "kind": "transparent"
    },
    {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0x688ae2205cfcb4d5731483e615f5d0633048186b9c5d9d1d5b6a2b131e18a5d4",
      "kind": "transparent"
    },
    {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0xc2790dcd1fb5932dc3060743c67eb49da488874ecda799839572ba168e0cdf18",
      "kind": "transparent"
    },
    {
      "address": "0x9A676e781A523b5d0C0e43731313A708CB607508",
      "txHash": "0xa8bc8ec99686746d9f3feedc28a0700efe2fc84ffe6128ec986601364c876a28",
      "kind": "transparent"
    },
    {
      "address": "0x9A9f2CCfdE556A7E9Ff0848998Aa4a0CFD8863AE",
      "txHash": "0xfa1134a211442c20b21b3859a23c2ed5ed620364603a54084b8348d51029993c",
      "kind": "transparent"
    },
    {
      "address": "0xc6e7DF5E7b4f2A278906862b61205850344D4e7d",
      "txHash": "0x885dd189bb42c99b4768dc9674de755ea44163b82ab0790ff4a8874d561db6d4",
      "kind": "transparent"
    }
  ],
  "impls": {
    "02e044d5971e5bb3cefa503f1b2d5ec84b96b9ef7ef3b0283980442036a1acee": {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0xcf842c28a11be49185a94ba105ed08c455b7062d4becd35a5cc000a42a3173e8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ZapMarketV2",
            "label": "mediaContracts",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/nft/ZapMarketV2.sol:31"
          },
          {
            "contract": "ZapMarketV2",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts/nft/ZapMarketV2.sol:34"
          },
          {
            "contract": "ZapMarketV2",
            "label": "_tokenBidders",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(Bid)6986_storage)))",
            "src": "contracts/nft/ZapMarketV2.sol:37"
          },
          {
            "contract": "ZapMarketV2",
            "label": "_bidShares",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(BidShares)7001_storage))",
            "src": "contracts/nft/ZapMarketV2.sol:41"
          },
          {
            "contract": "ZapMarketV2",
            "label": "_tokenAsks",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Ask)6991_storage))",
            "src": "contracts/nft/ZapMarketV2.sol:47"
          },
          {
            "contract": "ZapMarketV2",
            "label": "isConfigured",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/nft/ZapMarketV2.sol:50"
          },
          {
            "contract": "ZapMarketV2",
            "label": "initialized",
            "type": "t_bool",
            "src": "contracts/nft/ZapMarketV2.sol:52"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(Bid)6986_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => struct IMarket.Bid)))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Bid)6986_storage))": {
            "label": "mapping(uint256 => mapping(address => struct IMarket.Bid))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Bid)6986_storage)": {
            "label": "mapping(address => struct IMarket.Bid)"
          },
          "t_struct(Bid)6986_storage": {
            "label": "struct IMarket.Bid",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "bidder",
                "type": "t_address"
              },
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "sellOnShare",
                "type": "t_struct(D256)3526_storage"
              }
            ]
          },
          "t_struct(D256)3526_storage": {
            "label": "struct Decimal.D256",
            "members": [
              {
                "label": "value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(BidShares)7001_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IMarket.BidShares))"
          },
          "t_mapping(t_uint256,t_struct(BidShares)7001_storage)": {
            "label": "mapping(uint256 => struct IMarket.BidShares)"
          },
          "t_struct(BidShares)7001_storage": {
            "label": "struct IMarket.BidShares",
            "members": [
              {
                "label": "prevOwner",
                "type": "t_struct(D256)3526_storage"
              },
              {
                "label": "creator",
                "type": "t_struct(D256)3526_storage"
              },
              {
                "label": "owner",
                "type": "t_struct(D256)3526_storage"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Ask)6991_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IMarket.Ask))"
          },
          "t_mapping(t_uint256,t_struct(Ask)6991_storage)": {
            "label": "mapping(uint256 => struct IMarket.Ask)"
          },
          "t_struct(Ask)6991_storage": {
            "label": "struct IMarket.Ask",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5679c4c3a19b5214f3f4fd88329ff6e0ef919a21dd0a0411ca8015d309195f44": {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0xf2d7012e1bb89a7016958cb4f06004f25f588c96cf65654ec43def4df5a9ef43",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ZapMarketV2",
            "label": "mediaContracts",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/nft/upgradeTests/ZapMarketV2.sol:32"
          },
          {
            "contract": "ZapMarketV2",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts/nft/upgradeTests/ZapMarketV2.sol:35"
          },
          {
            "contract": "ZapMarketV2",
            "label": "_tokenBidders",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(Bid)5979_storage)))",
            "src": "contracts/nft/upgradeTests/ZapMarketV2.sol:38"
          },
          {
            "contract": "ZapMarketV2",
            "label": "_bidShares",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(BidShares)5994_storage))",
            "src": "contracts/nft/upgradeTests/ZapMarketV2.sol:42"
          },
          {
            "contract": "ZapMarketV2",
            "label": "_tokenAsks",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Ask)5984_storage))",
            "src": "contracts/nft/upgradeTests/ZapMarketV2.sol:48"
          },
          {
            "contract": "ZapMarketV2",
            "label": "isConfigured",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/nft/upgradeTests/ZapMarketV2.sol:51"
          },
          {
            "contract": "ZapMarketV2",
            "label": "initialized",
            "type": "t_bool",
            "src": "contracts/nft/upgradeTests/ZapMarketV2.sol:53"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(Bid)5979_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => struct IMarket.Bid)))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Bid)5979_storage))": {
            "label": "mapping(uint256 => mapping(address => struct IMarket.Bid))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Bid)5979_storage)": {
            "label": "mapping(address => struct IMarket.Bid)"
          },
          "t_struct(Bid)5979_storage": {
            "label": "struct IMarket.Bid",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "bidder",
                "type": "t_address"
              },
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "sellOnShare",
                "type": "t_struct(D256)3526_storage"
              }
            ]
          },
          "t_struct(D256)3526_storage": {
            "label": "struct Decimal.D256",
            "members": [
              {
                "label": "value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(BidShares)5994_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IMarket.BidShares))"
          },
          "t_mapping(t_uint256,t_struct(BidShares)5994_storage)": {
            "label": "mapping(uint256 => struct IMarket.BidShares)"
          },
          "t_struct(BidShares)5994_storage": {
            "label": "struct IMarket.BidShares",
            "members": [
              {
                "label": "prevOwner",
                "type": "t_struct(D256)3526_storage"
              },
              {
                "label": "creator",
                "type": "t_struct(D256)3526_storage"
              },
              {
                "label": "owner",
                "type": "t_struct(D256)3526_storage"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Ask)5984_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IMarket.Ask))"
          },
          "t_mapping(t_uint256,t_struct(Ask)5984_storage)": {
            "label": "mapping(uint256 => struct IMarket.Ask)"
          },
          "t_struct(Ask)5984_storage": {
            "label": "struct IMarket.Ask",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "04c30e822e3c14e270d7fd06be77fecbe54ef6743173d7a5f8467bb5293891c4": {
      "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "txHash": "0x382e928ec639336ed866d93d7a33f7c150c616ce2d53983b79abe75bea2ac8d9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "Ownable",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/nft/access/Ownable.sol:11"
          },
          {
            "contract": "ZapMarket",
            "label": "mediaContracts",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/nft/ZapMarket.sol:32"
          },
          {
            "contract": "ZapMarket",
            "label": "_tokenBidders",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(Bid)9114_storage)))",
            "src": "contracts/nft/ZapMarket.sol:35"
          },
          {
            "contract": "ZapMarket",
            "label": "_bidShares",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(BidShares)9129_storage))",
            "src": "contracts/nft/ZapMarket.sol:39"
          },
          {
            "contract": "ZapMarket",
            "label": "_tokenAsks",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Ask)9119_storage))",
            "src": "contracts/nft/ZapMarket.sol:42"
          },
          {
            "contract": "ZapMarket",
            "label": "isConfigured",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/nft/ZapMarket.sol:45"
          },
          {
            "contract": "ZapMarket",
            "label": "initialized",
            "type": "t_bool",
            "src": "contracts/nft/ZapMarket.sol:47"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(Bid)9114_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => struct IMarket.Bid)))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Bid)9114_storage))": {
            "label": "mapping(uint256 => mapping(address => struct IMarket.Bid))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Bid)9114_storage)": {
            "label": "mapping(address => struct IMarket.Bid)"
          },
          "t_struct(Bid)9114_storage": {
            "label": "struct IMarket.Bid",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "bidder",
                "type": "t_address"
              },
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "sellOnShare",
                "type": "t_struct(D256)5190_storage"
              }
            ]
          },
          "t_struct(D256)5190_storage": {
            "label": "struct Decimal.D256",
            "members": [
              {
                "label": "value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(BidShares)9129_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IMarket.BidShares))"
          },
          "t_mapping(t_uint256,t_struct(BidShares)9129_storage)": {
            "label": "mapping(uint256 => struct IMarket.BidShares)"
          },
          "t_struct(BidShares)9129_storage": {
            "label": "struct IMarket.BidShares",
            "members": [
              {
                "label": "prevOwner",
                "type": "t_struct(D256)5190_storage"
              },
              {
                "label": "creator",
                "type": "t_struct(D256)5190_storage"
              },
              {
                "label": "owner",
                "type": "t_struct(D256)5190_storage"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Ask)9119_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IMarket.Ask))"
          },
          "t_mapping(t_uint256,t_struct(Ask)9119_storage)": {
            "label": "mapping(uint256 => struct IMarket.Ask)"
          },
          "t_struct(Ask)9119_storage": {
            "label": "struct IMarket.Ask",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
