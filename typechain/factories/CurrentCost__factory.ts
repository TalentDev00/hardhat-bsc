/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { CurrentCost } from "../CurrentCost";

export class CurrentCost__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    c: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CurrentCost> {
    return super.deploy(c, overrides || {}) as Promise<CurrentCost>;
  }
  getDeployTransaction(
    c: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(c, overrides || {});
  }
  attach(address: string): CurrentCost {
    return super.attach(address) as CurrentCost;
  }
  connect(signer: Signer): CurrentCost__factory {
    return super.connect(signer) as CurrentCost__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CurrentCost {
    return new Contract(address, _abi, signerOrProvider) as CurrentCost;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "c",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "oracleAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "endpoint",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nDots",
        type: "uint256",
      },
    ],
    name: "_costOfNDots",
    outputs: [
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "oracleAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "endpoint",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
    ],
    name: "_currentCostOfDot",
    outputs: [
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "oracleAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "endpoint",
        type: "bytes32",
      },
    ],
    name: "_dotLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "selfDestruct",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address payable",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "updateDependencies",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516113723803806113728339818101604052602081101561003357600080fd5b810190808051906020019092919050505080336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061011661011c60201b60201c565b5061023d565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663358177736040518163ffffffff1660e01b81526004018080602001828103825260088152602001807f524547495354525900000000000000000000000000000000000000000000000081525060200191505060206040518083038186803b1580156101c057600080fd5b505afa1580156101d4573d6000803e3d6000fd5b505050506040513d60208110156101ea57600080fd5b8101908080519060200190929190505050600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6111268061024c6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80639cb8a26a1161005b5780639cb8a26a146101a1578063c1ca69c4146101ab578063ecca1fad1461020d578063f2fde38b1461027957610088565b8063197d66d51461008d5780636e5ecdff14610103578063893d20e81461010d5780638da5cb5b14610157575b600080fd5b6100ed600480360360808110156100a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001909291905050506102bd565b6040518082815260200191505060405180910390f35b61010b6105cd565b005b61011561069a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61015f6106c3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101a96106e8565b005b6101f7600480360360408110156101c157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061077b565b6040518082815260200191505060405180910390f35b6102636004803603606081101561022357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610a35565b6040518082815260200191505060405180910390f35b6102bb6004803603602081101561028f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a4d565b005b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166387cd29a487876040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060206040518083038186803b15801561036757600080fd5b505afa15801561037b573d6000803e3d6000fd5b505050506040513d602081101561039157600080fd5b810190808051906020019092919050505090506060816040519080825280602002602001820160405280156103d55781602001602082028038833980820191505090505b509050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632316a9ff88886040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060006040518083038186803b15801561047f57600080fd5b505afa158015610493573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156104bd57600080fd5b81019080805160405193929190846401000000008211156104dd57600080fd5b838201915060208201858111156104f357600080fd5b825186602082028301116401000000008211171561051057600080fd5b8083526020830192505050908051906020019060200280838360005b8381101561054757808201518184015260208101905061052c565b5050505090500160405250505090506000610563828787610b9e565b905060008112156105bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806110a76026913960400191505060405180910390fd5b809350505050949350505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610690576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4572726f723a20436f6f7264696e61746f72204f6e6c792046756e6374696f6e81525060200191505060405180910390fd5b610698610cef565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461074157600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166387cd29a485856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060206040518083038186803b15801561082557600080fd5b505afa158015610839573d6000803e3d6000fd5b505050506040513d602081101561084f57600080fd5b810190808051906020019092919050505090506060816040519080825280602002602001820160405280156108935781602001602082028038833980820191505090505b509050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632316a9ff86866040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060006040518083038186803b15801561093d57600080fd5b505afa158015610951573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561097b57600080fd5b810190808051604051939291908464010000000082111561099b57600080fd5b838201915060208201858111156109b157600080fd5b82518660208202830111640100000000821117156109ce57600080fd5b8083526020830192505050908051906020019060200280838360005b83811015610a055780820151818401526020810190506109ea565b505050509050016040525050509050806001830381518110610a2357fe5b60200260200101519250505092915050565b6000610a4484848460006102bd565b90509392505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610aa657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ae057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009050600080905085600187510381518110610bba57fe5b60200260200101518486011115610c39576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4572726f723a2046756e6374696f6e206e6f7420696e20646f74206c696d697481525060200191505060405180910390fd5b5b8551821015610ce5576000868381518110610c5157fe5b6020026020010151905060008760018386010181518110610c6e57fe5b602002602001015190506000600283860101905081881115610c9557809450505050610c3a565b610cb389868a858b8d0111610caa578a610cae565b8b86035b610e10565b840193508187890111610ccd578395505050505050610ce8565b60018883030187039650819750809450505050610c3a565b50505b9392505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663358177736040518163ffffffff1660e01b81526004018080602001828103825260088152602001807f524547495354525900000000000000000000000000000000000000000000000081525060200191505060206040518083038186803b158015610d9357600080fd5b505afa158015610da7573d6000803e3d6000fd5b505050506040513d6020811015610dbd57600080fd5b8101908080519060200190929190505050600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600080600090506000868681518110610e2557fe5b6020026020010151905060006001870190506000828201905060008290505b81811015610e9057610e5b60018903848303610efa565b610e69888a01858403610efa565b038a8281518110610e7657fe5b602002602001015102850194508080600101915050610e44565b506000841215610eeb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806110cd6025913960400191505060405180910390fd5b83945050505050949350505050565b600060068211158015610f0e575060008210155b610f80576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f4572726f723a20496e76616c696420506965636577697365204c6f676963000081525060200191505060405180910390fd5b6000821415610f91578290506110a0565b6001821415610fb157600260018401840281610fa957fe5b0490506110a0565b6002821415610fd9576006600184600202016001850185020281610fd157fe5b0490506110a0565b6003821415610ffb5760028060018501850281610ff257fe5b040a90506110a0565b600482141561103257601e60018460030285866003020201036001856002020160018601860202028161102a57fe5b0490506110a0565b600582141561105b576001836002026002850a600202010360026001850185020a0290506110a0565b600682141561109b57602a6001846003026003860a6006026004870a6003020103016001856002020160018601860202028161109357fe5b0490506110a0565b600090505b9291505056fe4572726f723a20436f7374206f6620646f74732063616e6e6f74206265206e656761746976654572726f723a20436f7374206d7573742062652067726561746572207468616e207a65726fa265627a7a7231582075e636e4925705fd6b80d125fc87ccbf12bb164ef75dc8fce97694521668b13164736f6c63430005100032";
