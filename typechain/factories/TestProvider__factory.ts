/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { TestProvider } from "../TestProvider";

export class TestProvider__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    registryAddress: string,
    isBad: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestProvider> {
    return super.deploy(
      registryAddress,
      isBad,
      overrides || {}
    ) as Promise<TestProvider>;
  }
  getDeployTransaction(
    registryAddress: string,
    isBad: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(registryAddress, isBad, overrides || {});
  }
  attach(address: string): TestProvider {
    return super.attach(address) as TestProvider;
  }
  connect(signer: Signer): TestProvider__factory {
    return super.connect(signer) as TestProvider__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestProvider {
    return new Contract(address, _abi, signerOrProvider) as TestProvider;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "registryAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isBad",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "query",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "endpoint",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "params",
        type: "bytes32[]",
      },
    ],
    name: "RecievedQuery",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "res",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "b",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "s",
        type: "string",
      },
    ],
    name: "TEST",
    type: "event",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "userQuery",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "endpoint",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "endpointParams",
        type: "bytes32[]",
      },
      {
        internalType: "bool",
        name: "onchainSubscriber",
        type: "bool",
      },
    ],
    name: "receiveQuery",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "spec1",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "spec2",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "spec3",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "spec4",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040527f48656c6c6f3f00000000000000000000000000000000000000000000000000006000557f52657665727365000000000000000000000000000000000000000000000000006001557f41646400000000000000000000000000000000000000000000000000000000006002557f446f75626c6500000000000000000000000000000000000000000000000000006003556040518060a00160405280600363ffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600263ffffffff168152602001633b9aca0063ffffffff168152506005906005620000f392919062000806565b503480156200010157600080fd5b506040516200144538038062001445833981810160405260408110156200012757600080fd5b81019080805190602001909291908051906020019092919050505081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548160ff02191690831515021790555060007f54657374436f6e74726163740000000000000000000000000000000000000000905060606002604051908082528060200260200182016040528015620001f55781602001602082028038833980820191505090505b5090507f7031000000000000000000000000000000000000000000000000000000000000816000815181106200022757fe5b6020026020010181815250507f7032000000000000000000000000000000000000000000000000000000000000816001815181106200026257fe5b602002602001018181525050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663af87c833613039846040518363ffffffff1660e01b81526004018083815260200182815260200192505050602060405180830381600087803b158015620002ee57600080fd5b505af115801562000303573d6000803e3d6000fd5b505050506040513d60208110156200031a57600080fd5b810190808051906020019092919050505050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663238b3aed600054600560006040518463ffffffff1660e01b815260040180848152602001806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281038252848181548152602001915080548015620003ff57602002820191906000526020600020905b815481526020019060010190808311620003ea575b5050945050505050602060405180830381600087803b1580156200042257600080fd5b505af115801562000437573d6000803e3d6000fd5b505050506040513d60208110156200044e57600080fd5b810190808051906020019092919050505050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663238b3aed600154600560006040518463ffffffff1660e01b815260040180848152602001806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182810382528481815481526020019150805480156200053357602002820191906000526020600020905b8154815260200190600101908083116200051e575b5050945050505050602060405180830381600087803b1580156200055657600080fd5b505af11580156200056b573d6000803e3d6000fd5b505050506040513d60208110156200058257600080fd5b810190808051906020019092919050505050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663238b3aed600254600560006040518463ffffffff1660e01b815260040180848152602001806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182810382528481815481526020019150805480156200066757602002820191906000526020600020905b81548152602001906001019080831162000652575b5050945050505050602060405180830381600087803b1580156200068a57600080fd5b505af11580156200069f573d6000803e3d6000fd5b505050506040513d6020811015620006b657600080fd5b810190808051906020019092919050505050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663238b3aed600354600560006040518463ffffffff1660e01b815260040180848152602001806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182810382528481815481526020019150805480156200079b57602002820191906000526020600020905b81548152602001906001019080831162000786575b5050945050505050602060405180830381600087803b158015620007be57600080fd5b505af1158015620007d3573d6000803e3d6000fd5b505050506040513d6020811015620007ea57600080fd5b8101908080519060200190929190505050505050505062000888565b8280548282559060005260206000209081019282156200084d579160200282015b828111156200084c578251829063ffffffff1690559160200191906001019062000827565b5b5090506200085c919062000860565b5090565b6200088591905b808211156200088157600081600090555060010162000867565b5090565b90565b610bad80620008986000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632ee2742e1461005c57806348cf129a1461007a5780637ff94b6214610098578063c5d7a725146100b6578063d0a0431a146100d4575b600080fd5b6100646101c2565b6040518082815260200191505060405180910390f35b6100826101c8565b6040518082815260200191505060405180910390f35b6100a06101ce565b6040518082815260200191505060405180910390f35b6100be6101d4565b6040518082815260200191505060405180910390f35b6101c0600480360360a08110156100ea57600080fd5b81019080803590602001909291908035906020019064010000000081111561011157600080fd5b82018360208201111561012357600080fd5b8035906020019184600183028401116401000000008311171561014557600080fd5b9091929391929390803590602001909291908035906020019064010000000081111561017057600080fd5b82018360208201111561018257600080fd5b803590602001918460208302840111640100000000831117156101a457600080fd5b90919293919293908035151590602001909291905050506101da565b005b60015481565b60005481565b60025481565b60035481565b7fb1d30540f0019c1e94a292da7a6f164844c5d2e3dee75e0b3a6a66e4e9a4e15386868686866040518080602001858152602001806020018381038352888882818152602001925080828437600081840152601f19601f8201169050808301925050508381038252858582818152602001925060200280828437600081840152601f19601f82011690508083019250505097505050505050505060405180910390a1600460009054906101000a900460ff161561029657610655565b60008490508115610653576000816040516020018082815260200191505060405160208183030381529060405280519060200120905060005460405160200180828152602001915050604051602081830303815290604052805190602001208114156103915761038c8989898080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050878780806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505061065e565b610651565b6001546040516020018082815260200191505060405160208183030381529060405280519060200120811415610456576104518989898080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050878780806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505061072b565b610650565b600254604051602001808281526020019150506040516020818303038152906040528051906020012081141561051b576105168989898080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050878780806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505061083a565b61064f565b60035460405160200180828152602001915050604051602081830303815290604052805190602001208114156105e0576105db8989898080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050878780806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050506109ae565b61064e565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f496e76616c696420656e64706f696e740000000000000000000000000000000081525060200191505060405180910390fd5b5b5b5b505b505b50505050505050565b3373ffffffffffffffffffffffffffffffffffffffff16636843581c846040518263ffffffff1660e01b815260040180828152602001806020018281038252600b8152602001807f48656c6c6f20576f726c6400000000000000000000000000000000000000000081525060200192505050602060405180830381600087803b1580156106ea57600080fd5b505af11580156106fe573d6000803e3d6000fd5b505050506040513d602081101561071457600080fd5b810190808051906020019092919050505050505050565b606061073683610ab4565b90503373ffffffffffffffffffffffffffffffffffffffff16636843581c85836040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156107ab578082015181840152602081019050610790565b50505050905090810190601f1680156107d85780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b1580156107f857600080fd5b505af115801561080c573d6000803e3d6000fd5b505050506040513d602081101561082257600080fd5b81019080805190602001909291905050505050505050565b600080905060008090505b825181101561087c57600083828151811061085c57fe5b602002602001015160001c90508083019250508080600101915050610845565b50606060016040519080825280602002602001820160405280156108af5781602001602082028038833980820191505090505b5090508160001b816000815181106108c357fe5b6020026020010181815250503373ffffffffffffffffffffffffffffffffffffffff16630cbe69a186836040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019060200280838360005b8381101561094557808201518184015260208101905061092a565b505050509050019350505050602060405180830381600087803b15801561096b57600080fd5b505af115801561097f573d6000803e3d6000fd5b505050506040513d602081101561099557600080fd5b8101908080519060200190929190505050505050505050565b3373ffffffffffffffffffffffffffffffffffffffff1663fedea288846040518263ffffffff1660e01b8152600401808281526020018060200180602001838103835260058152602001807f48656c6c6f000000000000000000000000000000000000000000000000000000815250602001838103825260058152602001807f576f726c640000000000000000000000000000000000000000000000000000008152506020019350505050602060405180830381600087803b158015610a7357600080fd5b505af1158015610a87573d6000803e3d6000fd5b505050506040513d6020811015610a9d57600080fd5b810190808051906020019092919050505050505050565b606080829050606081516040519080825280601f01601f191660200182016040528015610af05781602001600182028038833980820191505090505b509050606081905060008090505b8351811015610b6c57838181518110610b1357fe5b602001015160f81c60f81b826001838751030381518110610b3057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050610afe565b5080935050505091905056fea265627a7a723158202d5fe6783af3a999366405d9593cca8a99cdf0bf95711efa98259479d7a6559c64736f6c63430005100032";
