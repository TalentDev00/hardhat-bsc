/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MediaGetter } from "../MediaGetter";

export class MediaGetter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MediaGetter> {
    return super.deploy(overrides || {}) as Promise<MediaGetter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MediaGetter {
    return super.attach(address) as MediaGetter;
  }
  connect(signer: Signer): MediaGetter__factory {
    return super.connect(signer) as MediaGetter__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MediaGetter {
    return new Contract(address, _abi, signerOrProvider) as MediaGetter;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getPreviousTokenOwners",
    outputs: [
      {
        internalType: "address",
        name: "prevOwner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenContentHashes",
    outputs: [
      {
        internalType: "bytes32",
        name: "contentHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenCreators",
    outputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenMetadataHashes",
    outputs: [
      {
        internalType: "bytes32",
        name: "metadataHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061017a806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063449488f1146100515780634a179ed914610077578063d04200a2146100a2578063e9aa2bb3146100b5575b600080fd5b61006461005f36600461012c565b6100c8565b6040519081526020015b60405180910390f35b61008a61008536600461012c565b6100de565b6040516001600160a01b03909116815260200161006e565b61008a6100b036600461012c565b6100fb565b6100646100c336600461012c565b610118565b6000818152600460205260408120545b92915050565b6000818152600160205260408120546001600160a01b03166100d8565b6000818152600260205260408120546001600160a01b03166100d8565b6000818152600360205260408120546100d8565b60006020828403121561013d578081fd5b503591905056fea2646970667358221220a9a67bb6f16fd9aef107c0580768f4f79329330e8a21e8492371be1b3843553064736f6c63430008040033";
