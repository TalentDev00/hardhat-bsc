/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { ZapMaster } from "../ZapMaster";

export class ZapMaster__factory extends ContractFactory {
  constructor(
    linkLibraryAddresses: ZapMasterLibraryAddresses,
    signer?: Signer
  ) {
    super(_abi, ZapMaster__factory.linkBytecode(linkLibraryAddresses), signer);
  }

  static linkBytecode(linkLibraryAddresses: ZapMasterLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$341c69a3b8ea65d7eeecd190190dea4d1b\\$__", "g"),
      linkLibraryAddresses["__$341c69a3b8ea65d7eeecd190190dea4d1b$__"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _zapContract: string,
    tokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ZapMaster> {
    return super.deploy(
      _zapContract,
      tokenAddress,
      overrides || {}
    ) as Promise<ZapMaster>;
  }
  getDeployTransaction(
    _zapContract: string,
    tokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _zapContract,
      tokenAddress,
      overrides || {}
    );
  }
  attach(address: string): ZapMaster {
    return super.attach(address) as ZapMaster;
  }
  connect(signer: Signer): ZapMaster__factory {
    return super.connect(signer) as ZapMaster__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZapMaster {
    return new Contract(address, _abi, signerOrProvider) as ZapMaster;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_zapContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_newZap",
        type: "address",
      },
    ],
    name: "NewZapAddress",
    type: "event",
  },
  {
    payable: true,
    stateMutability: "payable",
    type: "fallback",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_newDeity",
        type: "address",
      },
    ],
    name: "changeDeity",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_vaultContract",
        type: "address",
      },
    ],
    name: "changeVaultContract",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "_challenge",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_miner",
        type: "address",
      },
    ],
    name: "didMine",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "_disputeId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "didVote",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "_data",
        type: "bytes32",
      },
    ],
    name: "getAddressVars",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "_disputeId",
        type: "uint256",
      },
    ],
    name: "getAllDisputeVars",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256[9]",
        name: "",
        type: "uint256[9]",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getCurrentVariables",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
    ],
    name: "getDisputeIdByDisputeHash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "_disputeId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_data",
        type: "bytes32",
      },
    ],
    name: "getDisputeUintVars",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getLastNewValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
    ],
    name: "getLastNewValueById",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "getMinedBlockNum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "getMinersByRequestIdAndTimestamp",
    outputs: [
      {
        internalType: "address[5]",
        name: "",
        type: "address[5]",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
    ],
    name: "getNewValueCountbyRequestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "_request",
        type: "bytes32",
      },
    ],
    name: "getRequestIdByQueryHash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getRequestIdByRequestQIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "getRequestIdByTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getRequestQ",
    outputs: [
      {
        internalType: "uint256[51]",
        name: "",
        type: "uint256[51]",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_data",
        type: "bytes32",
      },
    ],
    name: "getRequestUintVars",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
    ],
    name: "getRequestVars",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "getStakerInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "getSubmissionsByTimestamp",
    outputs: [
      {
        internalType: "uint256[5]",
        name: "",
        type: "uint256[5]",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getSymbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "_requestID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getTimestampbyRequestIDandIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "_data",
        type: "bytes32",
      },
    ],
    name: "getUintVar",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getVariablesOnDeck",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "isInDispute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "retrieveData",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "totalTokenSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051620030ba380380620030ba8339818101604052604081101561003557600080fd5b8101908080519060200190929190805190602001909291905050508080604b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000603f01600060405180807f7a6170546f6b656e436f6e74726163740000000000000000000000000000000081525060100190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050600073__$341c69a3b8ea65d7eeecd190190dea4d1b$__6347b024eb90916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b15801561016f57600080fd5b505af4158015610183573d6000803e3d6000fd5b50505050336000603f01600060405180807f5f6f776e6572000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000603f01600060405180807f5f6465697479000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816000603f01600060405180807f7a6170436f6e7472616374000000000000000000000000000000000000000000815250600b0190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033604c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4a9a276906262ed9ed5e1fd15850a5f2b951b97198cc2fc0d32625f1bf3ab27082604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050612cdf80620003db6000396000f3fe6080604052600436106101ee5760003560e01c806370a082311161010d578063af0b1327116100a0578063da3799411161006f578063da37994114610eca578063dd62ed3e14610f19578063e0ae93c114610f9e578063e1eee6d614610ff7578063fc7cf0a014611133576101ee565b8063af0b132714610c92578063af2a510214610dcd578063b541302914610e1e578063c775b54214610e71576101ee565b80638da5cb5b116100dc5780638da5cb5b14610abc57806393fa491514610b13578063a22e407a14610b6c578063a7c438bc14610c1f576101ee565b806370a0823114610939578063733bdef01461099e57806377fbb66314610a0a5780637f6fd5d914610a63576101ee565b80633180f8df11610185578063612c8f7f11610154578063612c8f7f146107a75780636173c0b8146107f657806363bb82ad1461084557806369026d63146108b8576101ee565b80633180f8df146106505780633df0777b146106aa57806346eee1c41461070757806347abd7f114610756576101ee565b806317d7de7c116101c157806317d7de7c146104a857806319e8e03b146105385780631ca8b6cb146105d65780631db842f014610601576101ee565b80630f0b424d146102cd57806311c985121461031c578063133bee5e1461039d5780631507040114610418575b600080603f01600060405180807f7a6170436f6e7472616374000000000000000000000000000000000000000000815250600b0190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060606000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509050600080825160208401855af43d604051816000823e82600081146102c9578282f35b8282fd5b3480156102d957600080fd5b50610306600480360360208110156102f057600080fd5b8101908080359060200190929190505050611169565b6040518082815260200191505060405180910390f35b34801561032857600080fd5b5061035f6004803603604081101561033f57600080fd5b810190808035906020019092919080359060200190929190505050611186565b6040518082600560200280838360005b8381101561038a57808201518184015260208101905061036f565b5050505090500191505060405180910390f35b3480156103a957600080fd5b506103d6600480360360208110156103c057600080fd5b81019080803590602001909291905050506111ac565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561042457600080fd5b5061042d6111c9565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561046d578082015181840152602081019050610452565b50505050905090810190601f16801561049a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104b457600080fd5b506104bd6111da565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104fd5780820151818401526020810190506104e2565b50505050905090810190601f16801561052a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561054457600080fd5b5061054d6111eb565b6040518084815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561059957808201518184015260208101905061057e565b50505050905090810190601f1680156105c65780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b3480156105e257600080fd5b506105eb611205565b6040518082815260200191505060405180910390f35b34801561060d57600080fd5b5061063a6004803603602081101561062457600080fd5b8101908080359060200190929190505050611216565b6040518082815260200191505060405180910390f35b34801561065c57600080fd5b506106896004803603602081101561067357600080fd5b8101908080359060200190929190505050611233565b60405180838152602001821515151581526020019250505060405180910390f35b3480156106b657600080fd5b506106ed600480360360408110156106cd57600080fd5b810190808035906020019092919080359060200190929190505050611253565b604051808215151515815260200191505060405180910390f35b34801561071357600080fd5b506107406004803603602081101561072a57600080fd5b8101908080359060200190929190505050611273565b6040518082815260200191505060405180910390f35b34801561076257600080fd5b506107a56004803603602081101561077957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611290565b005b3480156107b357600080fd5b506107e0600480360360208110156107ca57600080fd5b81019080803590602001909291905050506112a7565b6040518082815260200191505060405180910390f35b34801561080257600080fd5b5061082f6004803603602081101561081957600080fd5b81019080803590602001909291905050506112c4565b6040518082815260200191505060405180910390f35b34801561085157600080fd5b5061089e6004803603604081101561086857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112e1565b604051808215151515815260200191505060405180910390f35b3480156108c457600080fd5b506108fb600480360360408110156108db57600080fd5b810190808035906020019092919080359060200190929190505050611301565b6040518082600560200280838360005b8381101561092657808201518184015260208101905061090b565b5050505090500191505060405180910390f35b34801561094557600080fd5b506109886004803603602081101561095c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611327565b6040518082815260200191505060405180910390f35b3480156109aa57600080fd5b506109ed600480360360208110156109c157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061140a565b604051808381526020018281526020019250505060405180910390f35b348015610a1657600080fd5b50610a4d60048036036040811015610a2d57600080fd5b81019080803590602001909291908035906020019092919050505061142a565b6040518082815260200191505060405180910390f35b348015610a6f57600080fd5b50610aa660048036036040811015610a8657600080fd5b81019080803590602001909291908035906020019092919050505061144a565b6040518082815260200191505060405180910390f35b348015610ac857600080fd5b50610ad161146a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610b1f57600080fd5b50610b5660048036036040811015610b3657600080fd5b810190808035906020019092919080359060200190929190505050611490565b6040518082815260200191505060405180910390f35b348015610b7857600080fd5b50610b816114b0565b6040518087815260200186815260200185815260200180602001848152602001838152602001828103825285818151815260200191508051906020019080838360005b83811015610bdf578082015181840152602081019050610bc4565b50505050905090810190601f168015610c0c5780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b348015610c2b57600080fd5b50610c7860048036036040811015610c4257600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114d8565b604051808215151515815260200191505060405180910390f35b348015610c9e57600080fd5b50610ccb60048036036020811015610cb557600080fd5b81019080803590602001909291905050506114f8565b604051808a815260200189151515158152602001881515151581526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183600960200280838360005b83811015610dac578082015181840152602081019050610d91565b50505050905001828152602001995050505050505050505060405180910390f35b348015610dd957600080fd5b50610e1c60048036036020811015610df057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611540565b005b348015610e2a57600080fd5b50610e3361158c565b6040518082603360200280838360005b83811015610e5e578082015181840152602081019050610e43565b5050505090500191505060405180910390f35b348015610e7d57600080fd5b50610eb460048036036040811015610e9457600080fd5b8101908080359060200190929190803590602001909291905050506115a3565b6040518082815260200191505060405180910390f35b348015610ed657600080fd5b50610f0360048036036020811015610eed57600080fd5b81019080803590602001909291905050506115c3565b6040518082815260200191505060405180910390f35b348015610f2557600080fd5b50610f8860048036036040811015610f3c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115e0565b6040518082815260200191505060405180910390f35b348015610faa57600080fd5b50610fe160048036036040811015610fc157600080fd5b8101908080359060200190929190803590602001909291905050506116f8565b6040518082815260200191505060405180910390f35b34801561100357600080fd5b506110306004803603602081101561101a57600080fd5b8101908080359060200190929190505050611718565b604051808060200180602001878152602001868152602001858152602001848152602001838103835289818151815260200191508051906020019080838360005b8381101561108c578082015181840152602081019050611071565b50505050905090810190601f1680156110b95780820380516001836020036101000a031916815260200191505b50838103825288818151815260200191508051906020019080838360005b838110156110f25780820151818401526020810190506110d7565b50505050905090810190601f16801561111f5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b34801561113f57600080fd5b5061114861174a565b60405180838152602001821515151581526020019250505060405180910390f35b600061117f82600061175f90919063ffffffff16565b9050919050565b61118e612c20565b6111a48383600061177f9092919063ffffffff16565b905092915050565b60006111c28260006117f590919063ffffffff16565b9050919050565b60606111d56000611835565b905090565b60606111e66000611874565b905090565b60008060606111fa60006118b3565b925092509250909192565b600061121160006119e7565b905090565b600061122c826000611a3b90919063ffffffff16565b9050919050565b60008061124a836000611a5b90919063ffffffff16565b91509150915091565b600061126b83836000611ad49092919063ffffffff16565b905092915050565b6000611289826000611b1690919063ffffffff16565b9050919050565b6112a4816000611b3c90919063ffffffff16565b50565b60006112bd826000611c6b90919063ffffffff16565b9050919050565b60006112da826000611c8b90919063ffffffff16565b9050919050565b60006112f983836000611cb99092919063ffffffff16565b905092915050565b611309612c42565b61131f83836000611d249092919063ffffffff16565b905092915050565b6000604b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156113c857600080fd5b505afa1580156113dc573d6000803e3d6000fd5b505050506040513d60208110156113f257600080fd5b81019080805190602001909291905050509050919050565b600080611421836000611dd090919063ffffffff16565b91509150915091565b600061144283836000611e689092919063ffffffff16565b905092915050565b600061146283836000611ea19092919063ffffffff16565b905092915050565b604c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006114a883836000611ed69092919063ffffffff16565b905092915050565b600080600060606000806114c46000611f0b565b955095509550955095509550909192939495565b60006114f0838360006122159092919063ffffffff16565b905092915050565b600080600080600080600061150b612c64565b60006115218a600061228390919063ffffffff16565b9850985098509850985098509850985098509193959799909294969850565b604c60149054906101000a900460ff161561155a57600080fd5b6001604c60146101000a81548160ff02191690831515021790555061158981600061264c90919063ffffffff16565b50565b611594612c87565b61159e600061277b565b905090565b60006115bb838360006127ca9092919063ffffffff16565b905092915050565b60006115d98260006127ff90919063ffffffff16565b9050919050565b6000604b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e84846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b1580156116b557600080fd5b505afa1580156116c9573d6000803e3d6000fd5b505050506040513d60208110156116df57600080fd5b8101908080519060200190929190505050905092915050565b60006117108383600061281f9092919063ffffffff16565b905092915050565b60608060008060008061173587600061285490919063ffffffff16565b95509550955095509550955091939550919395565b6000806117576000612ab3565b915091509091565b600082604201600083815260200190815260200160002054905092915050565b611787612c20565b83604801600084815260200190815260200160002060090160008381526020019081526020016000206005806020026040519081016040528092919082600580156117e7576020028201915b8154815260200190600101908083116117d3575b505050505090509392505050565b600082603f01600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b60606040518060400160405280600481526020017f5a415042000000000000000000000000000000000000000000000000000000008152509050919050565b60606040518060400160405280600981526020017f5a617020424550323000000000000000000000000000000000000000000000008152509050919050565b600080606060006118c385612b75565b905080856048016000838152602001908152602001600020600401600060405180807f746f74616c54697000000000000000000000000000000000000000000000000081525060080190506040518091039020815260200190815260200160002054866048016000848152602001908152602001600020600001808054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119d25780601f106119a7576101008083540402835291602001916119d2565b820191906000526020600020905b8154815290600101906020018083116119b557829003601f168201915b50505050509050935093509350509193909250565b600081604001600060405180807f746f74616c5f737570706c790000000000000000000000000000000000000000815250600c01905060405180910390208152602001908152602001600020549050919050565b600082604901600083815260200190815260200160002054905092915050565b60008060008460480160008581526020019081526020016000209050600081600301805490501115611ac157611ab5858583600301600185600301805490500381548110611aa557fe5b9060005260206000200154611ed6565b60019250925050611acd565b60008081915092509250505b9250929050565b6000836048016000848152602001908152602001600020600701600083815260200190815260200160002060009054906101000a900460ff1690509392505050565b600082604801600083815260200190815260200160002060030180549050905092915050565b3373ffffffffffffffffffffffffffffffffffffffff1682603f01600060405180807f5f6465697479000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611bde57600080fd5b8082603f01600060405180807f5f6465697479000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600082604001600083815260200190815260200160002054905092915050565b60006032821115611c9b57600080fd5b82604301600083815260200190815260200160002054905092915050565b600083604101600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690509392505050565b611d2c612c42565b8360480160008481526020019081526020016000206008016000838152602001908152602001600020600580602002604051908101604052809291908260058015611dc2576020028201915b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611d78575b505050505090509392505050565b6000808360470160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001548460470160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154915091509250929050565b60008360480160008481526020019081526020016000206003018281548110611e8d57fe5b906000526020600020015490509392505050565b600083604401600084815260200190815260200160002060070160008381526020019081526020016000205490509392505050565b600083604801600084815260200190815260200160002060060160008381526020019081526020016000205490509392505050565b60008060006060600080866000015487604001600060405180807f63757272656e74526571756573744964000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205488604001600060405180807f646966666963756c747900000000000000000000000000000000000000000000815250600a01905060405180910390208152602001908152602001600020548960480160008b604001600060405180807f63757272656e74526571756573744964000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205481526020019081526020016000206000018a60480160008c604001600060405180807f63757272656e7452657175657374496400000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020548152602001908152602001600020600401600060405180807f6772616e756c6172697479000000000000000000000000000000000000000000815250600b01905060405180910390208152602001908152602001600020548b60480160008d604001600060405180807f63757272656e7452657175657374496400000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020548152602001908152602001600020600401600060405180807f746f74616c54697000000000000000000000000000000000000000000000000081525060080190506040518091039020815260200190815260200160002054828054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121f95780601f106121ce576101008083540402835291602001916121f9565b820191906000526020600020905b8154815290600101906020018083116121dc57829003601f168201915b5050505050925095509550955095509550955091939550919395565b600083604401600084815260200190815260200160002060080160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690509392505050565b6000806000806000806000612296612c64565b6000808b60440160008c8152602001908152602001600020905080600001548160020160009054906101000a900460ff168260020160019054906101000a900460ff168360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168560060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866003015460405180610120016040528089600701600060405180807f726571756573744964000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200189600701600060405180807f74696d657374616d70000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200189600701600060405180807f76616c756500000000000000000000000000000000000000000000000000000081525060050190506040518091039020815260200190815260200160002054815260200189600701600060405180807f6d696e457865637574696f6e446174650000000000000000000000000000000081525060100190506040518091039020815260200190815260200160002054815260200189600701600060405180807f6e756d6265724f66566f74657300000000000000000000000000000000000000815250600d0190506040518091039020815260200190815260200160002054815260200189600701600060405180807f626c6f636b4e756d626572000000000000000000000000000000000000000000815250600b0190506040518091039020815260200190815260200160002054815260200189600701600060405180807f6d696e6572536c6f74000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200189600701600060405180807f71756f72756d000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002054815260200189600701600060405180807f6665650000000000000000000000000000000000000000000000000000000000815250600301905060405180910390208152602001908152602001600020548152508860010154995099509950995099509950995099509950509295985092959850929598565b3373ffffffffffffffffffffffffffffffffffffffff1682603f01600060405180807f5f6f776e6572000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146126ee57600080fd5b8082603f01600060405180807f5f7661756c74000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b612783612c87565b816001016033806020026040519081016040528092919082603380156127be576020028201915b8154815260200190600101908083116127aa575b50505050509050919050565b600083604801600084815260200190815260200160002060050160008381526020019081526020016000205490509392505050565b600082604a01600083815260200190815260200160002054905092915050565b600083604801600084815260200190815260200160002060040160008381526020019081526020016000205490509392505050565b606080600080600080600088604801600089815260200190815260200160002090508060000181600101826002015483600401600060405180807f6772616e756c6172697479000000000000000000000000000000000000000000815250600b019050604051809103902081526020019081526020016000205484600401600060405180807f7265717565737451506f736974696f6e000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205485600401600060405180807f746f74616c54697000000000000000000000000000000000000000000000000081525060080190506040518091039020815260200190815260200160002054858054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156129f95780601f106129ce576101008083540402835291602001916129f9565b820191906000526020600020905b8154815290600101906020018083116129dc57829003601f168201915b50505050509550848054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612a955780601f10612a6a57610100808354040283529160200191612a95565b820191906000526020600020905b815481529060010190602001808311612a7857829003601f168201915b50505050509450965096509650965096509650509295509295509295565b600080612b6a8384604201600086604001600060405180807f74696d654f664c6173744e657756616c756500000000000000000000000000008152506012019050604051809103902081526020019081526020016000205481526020019081526020016000205485604001600060405180807f74696d654f664c6173744e657756616c7565000000000000000000000000000081525060120190506040518091039020815260200190815260200160002054611ed6565b600191509150915091565b6000806000612bc284600101603380602002604051908101604052809291908260338015612bb8576020028201915b815481526020019060010190808311612ba4575b5050505050612be9565b80925081935050508360430160008281526020019081526020016000205492505050919050565b60008060005b6033811015612c1a576020810284015180841015612c0e578093508192505b50600181019050612bef565b50915091565b6040518060a00160405280600590602082028038833980820191505090505090565b6040518060a00160405280600590602082028038833980820191505090505090565b604051806101200160405280600990602082028038833980820191505090505090565b60405180610660016040528060339060208202803883398082019150509050509056fea265627a7a7231582095e176d434949f555bc01382a8233a0e053db77a82a429a7e6293983943f76d164736f6c63430005100032";

export interface ZapMasterLibraryAddresses {
  ["__$341c69a3b8ea65d7eeecd190190dea4d1b$__"]: string;
}
