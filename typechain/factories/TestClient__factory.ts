/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { TestClient } from "../TestClient";

export class TestClient__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    tokenAddress: string,
    dispatchAddress: string,
    bondageAddress: string,
    registryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestClient> {
    return super.deploy(
      tokenAddress,
      dispatchAddress,
      bondageAddress,
      registryAddress,
      overrides || {}
    ) as Promise<TestClient>;
  }
  getDeployTransaction(
    tokenAddress: string,
    dispatchAddress: string,
    bondageAddress: string,
    registryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      tokenAddress,
      dispatchAddress,
      bondageAddress,
      registryAddress,
      overrides || {}
    );
  }
  attach(address: string): TestClient {
    return super.attach(address) as TestClient;
  }
  connect(signer: Signer): TestClient__factory {
    return super.connect(signer) as TestClient__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestClient {
    return new Contract(address, _abi, signerOrProvider) as TestClient;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "dispatchAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "bondageAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "registryAddress",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oracle",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "query",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "MadeQuery",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "response1",
        type: "string",
      },
    ],
    name: "Result1",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "response1",
        type: "bytes32",
      },
    ],
    name: "Result1",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "response1",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "response2",
        type: "string",
      },
    ],
    name: "Result2",
    type: "event",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "response",
        type: "bytes32[]",
      },
    ],
    name: "callback",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "response1",
        type: "string",
      },
    ],
    name: "callback",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "response1",
        type: "string",
      },
      {
        internalType: "string",
        name: "response2",
        type: "string",
      },
    ],
    name: "callback",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "cancelQuery",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "oracleAddr",
        type: "address",
      },
      {
        internalType: "string",
        name: "query",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "specifier",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "params",
        type: "bytes32[]",
      },
    ],
    name: "testQuery",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516109a23803806109a28339818101604052608081101561003357600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190505050836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505061082a806101786000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806363b41fe91461005c5780637237dc0b146100df578063b69a375d1461010d578063d075f20f14610190578063f5795cd51461029c575b600080fd5b6100dd6004803603604081101561007257600080fd5b81019080803590602001909291908035906020019064010000000081111561009957600080fd5b8201836020820111156100ab57600080fd5b803590602001918460208302840111640100000000831117156100cd57600080fd5b9091929391929390505050610374565b005b61010b600480360360208110156100f557600080fd5b81019080803590602001909291905050506103cb565b005b61018e6004803603604081101561012357600080fd5b81019080803590602001909291908035906020019064010000000081111561014a57600080fd5b82018360208201111561015c57600080fd5b8035906020019184600183028401116401000000008311171561017e57600080fd5b909192939192939050505061045b565b005b610286600480360360808110156101a657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156101e357600080fd5b8201836020820111156101f557600080fd5b8035906020019184600183028401116401000000008311171561021757600080fd5b9091929391929390803590602001909291908035906020019064010000000081111561024257600080fd5b82018360208201111561025457600080fd5b8035906020019184602083028401116401000000008311171561027657600080fd5b909192939192939050505061054e565b6040518082815260200191505060405180910390f35b610372600480360360608110156102b257600080fd5b8101908080359060200190929190803590602001906401000000008111156102d957600080fd5b8201836020820111156102eb57600080fd5b8035906020019184600183028401116401000000008311171561030d57600080fd5b90919293919293908035906020019064010000000081111561032e57600080fd5b82018360208201111561034057600080fd5b8035906020019184600183028401116401000000008311171561036257600080fd5b909192939192939050505061074f565b005b7f5eef7b8de70c44e7326d1d7baa155450f5b38fc8d41309c12b2fc81817606b8183838360008181106103a357fe5b90506020020135604051808381526020018281526020019250505060405180910390a1505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637237dc0b826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561044057600080fd5b505af1158015610454573d6000803e3d6000fd5b5050505050565b606082828080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505090507f5d599109d8427016e4c93bff9b5f27e4cd24a83316a010d9ef7e15b7105d30e784826040518083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561050d5780820151818401526020810190506104f2565b50505050905090810190601f16801561053a5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a150505050565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637de7cc668989898989896040518763ffffffff1660e01b8152600401808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001858152602001806020018381038352888882818152602001925080828437600081840152601f19601f8201169050808301925050508381038252858582818152602001925060200280828437600081840152601f19601f82011690508083019250505098505050505050505050602060405180830381600087803b15801561066557600080fd5b505af1158015610679573d6000803e3d6000fd5b505050506040513d602081101561068f57600080fd5b810190808051906020019092919050505090507f50b551167947510d4c64636aac23b675db7849e6e7c824e4cf5830c3400e98a088888884604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018381526020018281038252858582818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060405180910390a1809150509695505050505050565b7f0c98c7262dfd083f4b7cd58bc095ed2ef00c31ad4e6859d16be4c2b0f7fadeae85858585856040518086815260200180602001806020018381038352878782818152602001925080828437600081840152601f19601f8201169050808301925050508381038252858582818152602001925080828437600081840152601f19601f82011690508083019250505097505050505050505060405180910390a1505050505056fea265627a7a72315820580ae0536b61352c59423b88be6bc1d674e4d4a85662b073adc7ae7b4613614364736f6c63430005100032";
