/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { BadBidder2 } from "../BadBidder2";

export class BadBidder2__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _mediaContract: string,
    _tokenContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BadBidder2> {
    return super.deploy(
      _mediaContract,
      _tokenContract,
      overrides || {}
    ) as Promise<BadBidder2>;
  }
  getDeployTransaction(
    _mediaContract: string,
    _tokenContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _mediaContract,
      _tokenContract,
      overrides || {}
    );
  }
  attach(address: string): BadBidder2 {
    return super.attach(address) as BadBidder2;
  }
  connect(signer: Signer): BadBidder2__factory {
    return super.connect(signer) as BadBidder2__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BadBidder2 {
    return new Contract(address, _abi, signerOrProvider) as BadBidder2;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_mediaContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "sellOnShare",
            type: "tuple",
          },
        ],
        internalType: "struct IMarket.Bid",
        name: "bid",
        type: "tuple",
      },
    ],
    name: "acceptRemoveBid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "marketAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "sellOnShare",
            type: "tuple",
          },
        ],
        internalType: "struct IMarket.Bid",
        name: "bid",
        type: "tuple",
      },
    ],
    name: "setBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516104d33803806104d383398101604081905261002f91610082565b600080546001600160a01b039384166001600160a01b031991821617825560018054939094169216919091179091556002556100b4565b80516001600160a01b038116811461007d57600080fd5b919050565b60008060408385031215610094578182fd5b61009d83610066565b91506100ab60208401610066565b90509250929050565b610410806100c36000396000f3fe6080604052600436106100295760003560e01c8063113b08de14610089578063259d04c31461009e575b6000805460405163b320f45960e01b815260048101929092526001600160a01b03169063b320f45990602401600060405180830381600087803b15801561006f57600080fd5b505af1158015610083573d6000803e3d6000fd5b50505050005b61009c610097366004610338565b6100be565b005b3480156100aa57600080fd5b5061009c6100b93660046102de565b610125565b6000805460405163ba33939960e01b81526001600160a01b039091169163ba339399916100f091908590600401610353565b600060405180830381600087803b15801561010a57600080fd5b505af115801561011e573d6000803e3d6000fd5b5050505050565b60015460405163095ea7b360e01b81526001600160a01b03848116600483015261012c60248301529091169063095ea7b390604401602060405180830381600087803b15801561017457600080fd5b505af1158015610188573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ac9190610311565b50600054600254604051632dfb121160e11b81526001600160a01b0390921691635bf62422916101e0918590600401610353565b600060405180830381600087803b1580156101fa57600080fd5b505af115801561020e573d6000803e3d6000fd5b505050505050565b80356001600160a01b038116811461022d57600080fd5b919050565b600081830360a0811215610244578182fd5b60405160a0810181811067ffffffffffffffff8211171561027357634e487b7160e01b84526041600452602484fd5b6040528335815291508161028960208501610216565b602082015261029a60408501610216565b60408201526102ab60608501610216565b60608201526020607f19830112156102c257600080fd5b6102ca6103a3565b608094850135815293019290925292915050565b60008060c083850312156102f0578182fd5b6102f983610216565b91506103088460208501610232565b90509250929050565b600060208284031215610322578081fd5b81518015158114610331578182fd5b9392505050565b600060a08284031215610349578081fd5b6103318383610232565b82815260c081016103316020830184805182526020808201516001600160a01b03908116918401919091526040808301518216908401526060808301519091169083015260809081015151910152565b6040516020810167ffffffffffffffff811182821017156103d457634e487b7160e01b600052604160045260246000fd5b6040529056fea2646970667358221220cc918a5ff9ff3a540a2204d5847a0e521803e54b301221ee8157779c04b1ec0764736f6c63430008040033";
