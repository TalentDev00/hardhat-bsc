/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { WETH } from "../WETH";

export class WETH__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WETH> {
    return super.deploy(overrides || {}) as Promise<WETH>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WETH {
    return super.attach(address) as WETH;
  }
  connect(signer: Signer): WETH__factory {
    return super.connect(signer) as WETH__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): WETH {
    return new Contract(address, _abi, signerOrProvider) as WETH;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "guy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom2",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60c0604052600d60808190526c2bb930b83832b21022ba3432b960991b60a090815261002e916000919061007a565b50604080518082019091526004808252630ae8aa8960e31b602090920191825261005a9160019161007a565b506002805460ff1916601217905534801561007457600080fd5b5061014e565b82805461008690610113565b90600052602060002090601f0160209004810192826100a857600085556100ee565b82601f106100c157805160ff19168380011785556100ee565b828001600101855582156100ee579182015b828111156100ee5782518255916020019190600101906100d3565b506100fa9291506100fe565b5090565b5b808211156100fa57600081556001016100ff565b600181811c9082168061012757607f821691505b6020821081141561014857634e487b7160e01b600052602260045260246000fd5b50919050565b610b94806200015e6000396000f3fe6080604052600436106100ab5760003560e01c80636c12ed28116100645780636c12ed28146101a657806370a08231146101c657806395d89b41146101f3578063a9059cbb14610208578063d0e30db0146100ba578063dd62ed3e14610228576100ba565b806306fdde03146100c2578063095ea7b3146100ed57806318160ddd1461011d57806323b872dd1461013a5780632e1a7d4d1461015a578063313ce5671461017a576100ba565b366100ba576100b8610260565b005b6100b8610260565b3480156100ce57600080fd5b506100d76102bb565b6040516100e49190610a8b565b60405180910390f35b3480156100f957600080fd5b5061010d610108366004610a4a565b610349565b60405190151581526020016100e4565b34801561012957600080fd5b50475b6040519081526020016100e4565b34801561014657600080fd5b5061010d610155366004610a0f565b6103b5565b34801561016657600080fd5b506100b8610175366004610a73565b610547565b34801561018657600080fd5b506002546101949060ff1681565b60405160ff90911681526020016100e4565b3480156101b257600080fd5b5061010d6101c1366004610a0f565b6105ed565b3480156101d257600080fd5b5061012c6101e13660046109c3565b60036020526000908152604090205481565b3480156101ff57600080fd5b506100d7610986565b34801561021457600080fd5b5061010d610223366004610a4a565b610993565b34801561023457600080fd5b5061012c6102433660046109dd565b600460209081526000928352604080842090915290825290205481565b336000908152600360205260408120805434929061027f908490610ade565b909155505060405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2565b600080546102c890610b0d565b80601f01602080910402602001604051908101604052809291908181526020018280546102f490610b0d565b80156103415780601f1061031657610100808354040283529160200191610341565b820191906000526020600020905b81548152906001019060200180831161032457829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103a49086815260200190565b60405180910390a350600192915050565b6001600160a01b0383166000908152600360205260408120548211156103da57600080fd5b6001600160a01b038416331480159061042657506001600160a01b03841660009081526004602090815260408083203384529091529020546fffffffffffffffffffffffffffffffff14155b15610494576001600160a01b038416600090815260046020908152604080832033845290915290205482111561045b57600080fd5b6001600160a01b03841660009081526004602090815260408083203384529091528120805484929061048e908490610af6565b90915550505b6001600160a01b038416600090815260036020526040812080548492906104bc908490610af6565b90915550506001600160a01b038316600090815260036020526040812080548492906104e9908490610ade565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161053591815260200190565b60405180910390a35060019392505050565b3360009081526003602052604090205481111561056357600080fd5b3360009081526003602052604081208054839290610582908490610af6565b9091555050604051339082156108fc029083906000818181858888f193505050501580156105b4573d6000803e3d6000fd5b5060405181815233907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659060200160405180910390a250565b60006001600160a01b03841633146106ee576001600160a01b038416600090815260046020908152604080832033845290915290205460001981146106ec57828110156106815760405162461bcd60e51b815260206004820152601f60248201527f574554483a2072657175657374206578636565647320616c6c6f77616e63650060448201526064015b60405180910390fd5b600061068d8483610af6565b6001600160a01b038716600081815260046020908152604080832033808552908352928190208590555184815293945090927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505b505b6001600160a01b0383161561080e576001600160a01b038416600090815260036020526040902054828110156107745760405162461bcd60e51b815260206004820152602560248201527f574554483a207472616e7366657220616d6f756e7420657863656564732062616044820152646c616e636560d81b6064820152608401610678565b61077e8382610af6565b6001600160a01b0380871660009081526003602052604080822093909355908616815290812080548592906107b4908490610ade565b92505081905550836001600160a01b0316856001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161080091815260200190565b60405180910390a35061097c565b6001600160a01b038416600090815260036020526040902054828110156108815760405162461bcd60e51b815260206004820152602160248201527f574554483a206275726e20616d6f756e7420657863656564732062616c616e636044820152606560f81b6064820152608401610678565b61088b8382610af6565b6001600160a01b0386166000818152600360205260408082209390935591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906108d99087815260200190565b60405180910390a3604051600090339085908381818185875af1925050503d8060008114610923576040519150601f19603f3d011682016040523d82523d6000602084013e610928565b606091505b50509050806109795760405162461bcd60e51b815260206004820152601960248201527f574554483a20455448207472616e73666572206661696c6564000000000000006044820152606401610678565b50505b5060019392505050565b600180546102c890610b0d565b60006109a03384846103b5565b9392505050565b80356001600160a01b03811681146109be57600080fd5b919050565b6000602082840312156109d4578081fd5b6109a0826109a7565b600080604083850312156109ef578081fd5b6109f8836109a7565b9150610a06602084016109a7565b90509250929050565b600080600060608486031215610a23578081fd5b610a2c846109a7565b9250610a3a602085016109a7565b9150604084013590509250925092565b60008060408385031215610a5c578182fd5b610a65836109a7565b946020939093013593505050565b600060208284031215610a84578081fd5b5035919050565b6000602080835283518082850152825b81811015610ab757858101830151858201604001528201610a9b565b81811115610ac85783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610af157610af1610b48565b500190565b600082821015610b0857610b08610b48565b500390565b600181811c90821680610b2157607f821691505b60208210811415610b4257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220d5f6fca7accb9c291a9e9eb064efcbfd4f24af5a45782545f1441181d6f77dc764736f6c63430008040033";
