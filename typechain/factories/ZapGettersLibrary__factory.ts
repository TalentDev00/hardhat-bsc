/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { ZapGettersLibrary } from "../ZapGettersLibrary";

export class ZapGettersLibrary__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ZapGettersLibrary> {
    return super.deploy(overrides || {}) as Promise<ZapGettersLibrary>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ZapGettersLibrary {
    return super.attach(address) as ZapGettersLibrary;
  }
  connect(signer: Signer): ZapGettersLibrary__factory {
    return super.connect(signer) as ZapGettersLibrary__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZapGettersLibrary {
    return new Contract(address, _abi, signerOrProvider) as ZapGettersLibrary;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_newZap",
        type: "address",
      },
    ],
    name: "NewZapAddress",
    type: "event",
  },
];

const _bytecode =
  "0x60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158206118048ffaae73097b5c0ffbf21aa787b977af77064bf03192d08f2d88fb50ab64736f6c63430005100032";
