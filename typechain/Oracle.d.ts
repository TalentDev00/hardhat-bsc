/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  Contract,
  ContractTransaction,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface OracleInterface extends ethers.utils.Interface {
  functions: {
    "getAddressVars(bytes32)": FunctionFragment;
    "getNewValueCountbyRequestId(uint256)": FunctionFragment;
    "getRequestUintVars(uint256,bytes32)": FunctionFragment;
    "getTimestampbyRequestIDandIndex(uint256,uint256)": FunctionFragment;
    "getUintVar(bytes32)": FunctionFragment;
    "retrieveData(uint256,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getAddressVars",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getNewValueCountbyRequestId",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRequestUintVars",
    values: [BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getTimestampbyRequestIDandIndex",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getUintVar",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "retrieveData",
    values: [BigNumberish, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "getAddressVars",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getNewValueCountbyRequestId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRequestUintVars",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTimestampbyRequestIDandIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getUintVar", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "retrieveData",
    data: BytesLike
  ): Result;

  events: {};
}

export class Oracle extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: OracleInterface;

  functions: {
    getAddressVars(
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getAddressVars(bytes32)"(
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getNewValueCountbyRequestId(
      _requestId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getNewValueCountbyRequestId(uint256)"(
      _requestId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getRequestUintVars(
      _requestId: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getRequestUintVars(uint256,bytes32)"(
      _requestId: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getTimestampbyRequestIDandIndex(
      _requestID: BigNumberish,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getTimestampbyRequestIDandIndex(uint256,uint256)"(
      _requestID: BigNumberish,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getUintVar(
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getUintVar(bytes32)"(
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    retrieveData(
      _requestId: BigNumberish,
      _timestamp: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "retrieveData(uint256,uint256)"(
      _requestId: BigNumberish,
      _timestamp: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;
  };

  getAddressVars(_data: BytesLike, overrides?: CallOverrides): Promise<string>;

  "getAddressVars(bytes32)"(
    _data: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  getNewValueCountbyRequestId(
    _requestId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getNewValueCountbyRequestId(uint256)"(
    _requestId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getRequestUintVars(
    _requestId: BigNumberish,
    _data: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getRequestUintVars(uint256,bytes32)"(
    _requestId: BigNumberish,
    _data: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getTimestampbyRequestIDandIndex(
    _requestID: BigNumberish,
    _index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getTimestampbyRequestIDandIndex(uint256,uint256)"(
    _requestID: BigNumberish,
    _index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getUintVar(_data: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

  "getUintVar(bytes32)"(
    _data: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  retrieveData(
    _requestId: BigNumberish,
    _timestamp: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "retrieveData(uint256,uint256)"(
    _requestId: BigNumberish,
    _timestamp: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  callStatic: {
    getAddressVars(
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "getAddressVars(bytes32)"(
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    getNewValueCountbyRequestId(
      _requestId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getNewValueCountbyRequestId(uint256)"(
      _requestId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRequestUintVars(
      _requestId: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getRequestUintVars(uint256,bytes32)"(
      _requestId: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTimestampbyRequestIDandIndex(
      _requestID: BigNumberish,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTimestampbyRequestIDandIndex(uint256,uint256)"(
      _requestID: BigNumberish,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUintVar(_data: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "getUintVar(bytes32)"(
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    retrieveData(
      _requestId: BigNumberish,
      _timestamp: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "retrieveData(uint256,uint256)"(
      _requestId: BigNumberish,
      _timestamp: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    getAddressVars(
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAddressVars(bytes32)"(
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getNewValueCountbyRequestId(
      _requestId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getNewValueCountbyRequestId(uint256)"(
      _requestId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRequestUintVars(
      _requestId: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getRequestUintVars(uint256,bytes32)"(
      _requestId: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTimestampbyRequestIDandIndex(
      _requestID: BigNumberish,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTimestampbyRequestIDandIndex(uint256,uint256)"(
      _requestID: BigNumberish,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUintVar(_data: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "getUintVar(bytes32)"(
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    retrieveData(
      _requestId: BigNumberish,
      _timestamp: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "retrieveData(uint256,uint256)"(
      _requestId: BigNumberish,
      _timestamp: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getAddressVars(
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAddressVars(bytes32)"(
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getNewValueCountbyRequestId(
      _requestId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getNewValueCountbyRequestId(uint256)"(
      _requestId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRequestUintVars(
      _requestId: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getRequestUintVars(uint256,bytes32)"(
      _requestId: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTimestampbyRequestIDandIndex(
      _requestID: BigNumberish,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTimestampbyRequestIDandIndex(uint256,uint256)"(
      _requestID: BigNumberish,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getUintVar(
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getUintVar(bytes32)"(
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    retrieveData(
      _requestId: BigNumberish,
      _timestamp: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "retrieveData(uint256,uint256)"(
      _requestId: BigNumberish,
      _timestamp: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
